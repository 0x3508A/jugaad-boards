name: "Build jugaad_samd_ard"

env:
  TAG_NAME: ${{ github.ref_name }}
  BUILD_NAME: "jugaad_samd_ard"
  PACKAGE_TEMPLATE: "samd-arduino/jugaad_samd_ard.txt"
  PACKAGE_INDEX: 0
  PACKAGE_NAME: "package_jugaad-boards_index.json"
  MIXIN_DIR: "samd-arduino/mixin"

## Trigger
on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

## Jobs to Work On
jobs:
  arduino-samd-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare Environment Variables
        id: penv
        run: |
          # Send current variables as output
          echo "TAG_NAME=${TAG_NAME}" >> "$GITHUB_OUTPUT"
          echo "BUILD_NAME=${BUILD_NAME}" >> "$GITHUB_OUTPUT"
          echo "PACKAGE_TEMPLATE=${PACKAGE_TEMPLATE}" >> "$GITHUB_OUTPUT"
          echo "PACKAGE_INDEX=${PACKAGE_INDEX}" >> "$GITHUB_OUTPUT"
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "MIXIN_DIR=${MIXIN_DIR}" >> "$GITHUB_OUTPUT"
          # Create More Variables
          BUILD="${BUILD_NAME}-${TAG_NAME}"
          ARCHIVE="${BUILD}.tar.bz2"
          # Set Them to output and ENV file
          echo "BUILD=${BUILD}" >> "$GITHUB_OUTPUT"
          echo "BUILD=${BUILD}" >> "$GITHUB_ENV"
          echo "ARCHIVE=${ARCHIVE}" >> "$GITHUB_OUTPUT"
          echo "ARCHIVE=${ARCHIVE}" >> "$GITHUB_ENV"

      - name: Print the Environment
        run: |
          echo " TAG_NAME         = ${TAG_NAME}"
          echo " BUILD_NAME       = ${BUILD_NAME}"
          echo " PACKAGE_TEMPLATE = ${PACKAGE_TEMPLATE}"
          echo " PACKAGE_INDEX    = ${PACKAGE_INDEX}"
          echo " PACKAGE_NAME     = ${PACKAGE_NAME}"
          echo " MIXIN_DIR        = ${MIXIN_DIR}"
          echo " BUILD            = ${BUILD}"
          echo " ARCHIVE          = ${ARCHIVE}"

      - name: Get Arduino SAMD Core
        uses: actions/checkout@v3
        with:
          repository: arduino/ArduinoCore-samd
          path: ${{ steps.penv.outputs.BUILD }}

      - name: Get to the Latest SAMD Core version
        run: |
          cd "${BUILD}"
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Checkout ArduinoCore-API
        uses: actions/checkout@v3
        with:
          repository: arduino/ArduinoCore-API
          path: ArduinoCore-API

      - name: Get to the Latest API Core version & Copy to SAMD Core
        run: |
          cd ArduinoCore-API
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
          mv api "../${BUILD}/cores/arduino/"
          cd ..
          rm -rf ArduinoCore-API

      - name: Prepare for Mixin
        run: |
          cd "${BUILD}"
          rm -rf .git*
          rm -rf bootloaders/
          rm -rf variants/
          rm LICENSE
          cd ..
          cp -arT "$MIXIN_DIR" "${BUILD}/"

      - name: Create Archive
        id: arch
        run: |
          tar --exclude=extras/** --exclude=.git* --exclude=.idea \
            -cjf "${ARCHIVE}" "${BUILD}"
          CHKSUM=$(sha256sum "${ARCHIVE}" | awk '{ print $1 }')
          SIZE=$(wc -c "${ARCHIVE}" | awk '{ print $1 }')
          # Export Variables
          echo "CHKSUM=${CHKSUM}" >> "$GITHUB_ENV"
          echo "CHKSUM=${CHKSUM}" >> "$GITHUB_OUTPUT"
          echo "SIZE=${SIZE}" >> "$GITHUB_ENV"
          echo "SIZE=${SIZE}" >> "$GITHUB_OUTPUT"
          echo
          echo "   --- Checksum for ${ARCHIVE} = ${CHKSUM}"
          echo "   --- Size for ${ARCHIVE}     = ${SIZE} bytes"
          echo

      - name: Prepare artifacts
        run: |
          mkdir artifacts
          mv "${ARCHIVE}" artifacts/
          rm -rf "${BUILD}"
          cat "${PACKAGE_TEMPLATE}" |
          sed "s/%%VERSION%%/${TAG_NAME}/" |
          sed "s/%%FILENAME%%/${ARCHIVE}/" |
          sed "s/%%CHECKSUM%%/${CHKSUM}/" |
          sed "s/%%RELEASE%%/${TAG_NAME}/" |
          sed "s/%%SIZE%%/${SIZE}/" > input.json
          jq -r --argjson inf "$(jq '.packages[0].platforms[0]' input.json)" \
            '.packages[${{ steps.penv.outputs.PACKAGE_INDEX }}].platforms += [$inf]' \
            "${PACKAGE_NAME}" | tee new.json
          mv new.json "${PACKAGE_NAME}"
          cp *.json artifacts/
          rm input.json

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Archive
          path: ${{ github.workspace }}/artifacts/**/*
          retention-days: 5

      - name: Commit the Changed Package File
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email ''
          git commit -am "Automated Package File"
          git push origin HEAD:main

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.penv.outputs.TAG_NAME }}
          name: Release ${{ steps.penv.outputs.TAG_NAME }}
          draft: false
          files: |
            LICENSE.txt
            artifacts/*.tar.bz2
